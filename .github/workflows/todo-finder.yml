name: TODO Finder

on:
  push:
    branches: [main, master] # Run on merges to main/master branches
  pull_request:
    types: [closed] # Also run when PRs are merged
    branches: [main, master]

jobs:
  find-todos:
    name: Find TODOs in codebase
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Debug file listing
        run: |
          # List some sample files to make sure we're checking the right files
          echo "Listing sample files in the repository:"
          find . -type f -name "*.js" -o -name "*.ts" | head -n 10

      - name: Find TODOs
        id: find-todos
        run: |
          # Create a temporary file for the results
          touch todo_results.txt

          # First, try with a broader regex pattern (for debugging)
          echo "Searching with broad pattern - looking for any 'TODO' in comments..."
          # Make grep case insensitive to catch variations
          TODOS=$(grep -r -i --include="*.{js,jsx,ts,tsx,java,py,rb,php,c,cpp,h,hpp,cs,go,swift,kt}" "TODO" --exclude-dir={node_modules,.git,build,dist,vendor} .)

          if [ -z "$TODOS" ]; then
            echo "No 'TODO' strings found with broad pattern. Trying to examine some source files directly..."
            # Check some files directly (random sample)
            SAMPLE_FILES=$(find . -type f -name "*.js" -o -name "*.ts" | head -n 5)
            echo "Sample files to check:"
            echo "$SAMPLE_FILES"
            
            for file in $SAMPLE_FILES; do
              echo "Contents of $file:"
              cat "$file"
              echo "-------------------"
            done
          fi

          # Now search with the proper pattern for TODOs in comments
          echo "Searching for TODOs with specific pattern..."

          # Find all TODOs and count them (try multiple patterns)
          TODOS=$(grep -r -i --include="*.{js,jsx,ts,tsx,java,py,rb,php,c,cpp,h,hpp,cs,go,swift,kt}" -E "(//\s*TODO|/\*\s*TODO)" --exclude-dir={node_modules,.git,build,dist,vendor} .)
          TODO_COUNT=$(echo "$TODOS" | wc -l)

          echo "Raw grep output:"
          echo "$TODOS"

          echo "Found $TODO_COUNT TODO comments"

          # Print the results
          echo "## TODO Locations Found"
          echo "-------------------"

          if [ $TODO_COUNT -gt 0 ] && [ -n "$TODOS" ]; then
            echo "$TODOS" | while read -r line; do
              echo "$line"
            done
            
            echo "::notice title=TODOs Found::Found $TODO_COUNT TODOs in your codebase. Check the output for details."
          else
            echo "No TODOs found in the codebase."
            echo "::notice title=No TODOs::No TODOs found in your codebase."
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const todoResults = require('fs').readFileSync('todo_results.txt', 'utf8');

            let commentBody = `## TODO Finder Results\n\n`;

            if (todoResults.includes('TODO')) {
              commentBody += todoResults;
            } else {
              commentBody += `âœ… No TODOs found in the codebase! Great job keeping technical debt in check.`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
